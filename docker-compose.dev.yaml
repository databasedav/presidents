version: '3.7'
services:
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always

  kafka:
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      # # https://rmoff.net/2018/08/02/kafka-listeners-explained/
      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    ports:
      - target: 9092
        published: 9092
    restart: always
  
  game_store:
    image: "redis:6.0-rc-buster"
    command: sh -c "rm -f /data/dump.rdb && redis-server"
    ports:
      - target: 6379
        published: 6379
    restart: always
  
  socketio_pubsub:
    image: "redis:6.0-rc-buster"
    command: sh -c "rm -f /data/dump.rdb && redis-server"
    ports:
      - target: 6379
        published: 6380
    restart: always

  game_god:
    build:
      context: ./  # runs the Dockerfile as if from workspace dir
      dockerfile: ./src/back/services/game_god/Dockerfile
    depends_on:
      - monitor
    ports:
      - target: 6066
        published: 6067
    volumes:
      - ./src/back/services/game_god:/presidents/src/back/services/game_god
    restart: always

  # game_god_2:
  #   build:
  #     context: ./  # runs the Dockerfile as if from workspace dir
  #     dockerfile: ./src/back/services/game_god/Dockerfile
  #   depends_on:
  #     - monitor
  #   ports:
  #     - target: 6066
  #       published: 6068
  #   volumes:
  #     - ./src/back/services/game_god:/presidents/src/back/services/game_god
  #   restart: always

  game_server:
    build:
      context: ./
      dockerfile: ./src/back/services/game_server/Dockerfile
    depends_on:
      - game_god
    ports:
      - target: 80
        published: 8000
    volumes:
      - ./src/back/services/game_server:/presidents/src/back/services/game_server
    restart: always

  # bot_game_server_1:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/game_server/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   volumes:
  #     - ./src/back/services/game_server:/presidents/src/back/services/game_server
  #   environment:
  #     BOT_SERVER: 'true'
  #   restart: always
  
  # bot_game_server_2:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/game_server/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   volumes:
  #     - ./src/back/services/game_server:/presidents/src/back/services/game_server
  #   environment:
  #     BOT_SERVER: 'true'
  #   restart: always

  # bot_game_server_3:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/game_server/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   volumes:
  #     - ./src/back/services/game_server:/presidents/src/back/services/game_server
  #   environment:
  #     BOT_SERVER: 'true'
  #   restart: always
  
  # bot_game_server_4:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/game_server/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   volumes:
  #     - ./src/back/services/game_server:/presidents/src/back/services/game_server
  #   environment:
  #     BOT_SERVER: 'true'
  #   restart: always

  # bot_game_server_5:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/game_server/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   volumes:
  #     - ./src/back/services/game_server:/presidents/src/back/services/game_server
  #   environment:
  #     BOT_SERVER: 'true'
  #   restart: always
  
  # bot_game_server_6:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/game_server/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   volumes:
  #     - ./src/back/services/game_server:/presidents/src/back/services/game_server
  #   environment:
  #     BOT_SERVER: 'true'
  #   restart: always

  # bot_game_server_7:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/game_server/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   volumes:
  #     - ./src/back/services/game_server:/presidents/src/back/services/game_server
  #   environment:
  #     BOT_SERVER: 'true'
  #   restart: always
  
  # bot_game_server_8:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/game_server/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   volumes:
  #     - ./src/back/services/game_server:/presidents/src/back/services/game_server
  #   environment:
  #     BOT_SERVER: 'true'
  #   restart: always

  monitor:
    build:
      context: ./
      dockerfile: ./src/back/services/monitor/Dockerfile
    depends_on:
      - game_store
      - socketio_pubsub
      - kafka
    ports:
      - target: 6066
        published: 6066
    volumes:
      - ./src/back/services/monitor:/presidents/src/back/services/monitor
    restart: always

  # bot_farm_1:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/bot_farm/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   ports:
  #     - target: 80
  #       published: 8001
  #   volumes:
  #     - ./src/back/game:/presidents/src/back/game
  #     - ./src/back/services/bot_farm:/presidents/src/back/services/bot_farm
  #   environment:
  #     BOT_FARM_ORDER: 1
  #   restart: always

  # bot_farm_2:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/bot_farm/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   ports:
  #     - target: 80
  #       published: 8002
  #   volumes:
  #     - ./src/back/game:/presidents/src/back/game
  #     - ./src/back/services/bot_farm:/presidents/src/back/services/bot_farm
  #   environment:
  #     BOT_FARM_ORDER: 2
  #   restart: always

  # bot_farm_3:
  #   build:
  #     context: ./
  #     dockerfile: ./src/back/services/bot_farm/Dockerfile
  #   depends_on:
  #     - game_god_2
  #   ports:
  #     - target: 80
  #       published: 8003
  #   volumes:
  #     - ./src/back/game:/presidents/src/back/game
  #     - ./src/back/services/bot_farm:/presidents/src/back/services/bot_farm
  #   environment:
  #     BOT_FARM_ORDER: 3
  #   restart: always
